#XXX Copy this file to owner_console.conf and fill in the fields

{
	# This instance name must be unique within the network.  It is used
	# as prefix in userid's.  [a-z0-9]{5,8}
	instance => 'oc001',

	# Overrule the automatic detection of the virtual-host of the website
	vhost    => 'https://open-console.eu',

	# Secrets are used to encrypt cookies.  Multiple secrets can be active
	# at the same time, for seemless changes.
	# You may decide you use https://metacpan.org/pod/Mojolicious::Command::secret
	# to bake your cookie secrets.

	#       XXXvvvv replace this one, with any hex string vvvXXX
	secrets  => [ '9ed5714761d3c28ee83f2fb20d2991a3fe282b93' ],

	# The email addresses of the administrators: they get more pages in the
	# dashboard.
	admins   => [ 'email1' ],

	# Select which interface languages you want to show to the end user.  When a
	# translation is not ready yet, then you can better only add it in the test
	# setup, not production.
	interface_languages => [ 'en' ],

	#### Sessions

	sessions => {
		# The amount of time until some-one is logged-out automatically.  If this
		# is too short, people cannot submit the forms the filled-in.  Time in
		# seconds.
		expire => 4 * 3600,
	},

	#### Group management

	groups => {
		# expiration of invitations (in days, float)
		invite_expiration  => 7,    # after which it cannot be used anymore
		extend_invitation  => 14,   # when explicitly extended/revived by group owner
		cleanup_invitation => 30,   # punish spam
	},

	#### Email

	email    => {
		sender      => 'Open Console <>',         # 'From' line
		overrule_to => '@',                       # in test setup, keep emails local
		subject_prefix => '[Open Console XXXX] ',
	},

	#### Proofs

	proofs   => {
		# When the challenge has been used, it will still stay this long in
		# the database, to be able to distinguish between "already used" and "invalid".
		expire_challenge => 30,               #  days, float
	},

	#### Databases
	#    various components are coded as if their data is location in different
	#    database instances.  This may be the case once Open Console grows huge.
	#    When the databases use the same server URL, then they will share the
	#    connections.

	# Critical data, so need redundancy.  Optimized to have few writes.
	# Where is the user's database? Contains users, identities, and groups.
	userdb  => {
		server => 'mongodb://localhost:27017',  # this is the default for mongodb
		dbname => 'users',
	},

	# Medium critical data, mild in performance requirements.
	assetsdb  => {
		server => 'mongodb://localhost:27017',
		dbname => 'assets',
	},

	# Low cricital data, but many writes: outgoing emails, presented tokens.
	# Often the table data is processed by Minion tasks.
	batchdb => {
		server => 'mongodb://localhost:27017',
		dbname => 'batch',
	},

	#### Tasks implement batch processing

	tasks => {
		servers => [ {
			label          => 'local',
			endpoint       => 'https://localhost:3001',
			authentication => '... bearer token',     # from tasks server
		} ],
		poll_interval => 2000,  # default
	},

	#XXX BEGIN
	#XXX This should move to a the Connect configuration, once these are separate
	#XXX daemons.

	connectdb => {
		server => 'mongodb://localhost:27017',
		dbname => 'connect',
	},

	#XXX these will become top-level configuration parameters
	connect => {
		endpoint  => 'https://connect.open-console.eu',

		logout => {
			default_grace => 'P1D',        # duration
		},

		# Once the "Connect" has its own daemons, it sometimes need to redirect to
		# the user website, for instance to Comply.
		ownersite => 'https://open-console.eu',
	},

	#XXX END
}
